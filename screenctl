#!/bin/bash
#
# screenctl - Control and manage your screen
#
# Copyright (c) 2011-2014 Emanuel Duss
# Licensed under GNU General Public License
#

INTERNAL="LVDS1"
EXTERNAL="VGA1"
WAIT="2" # Seconds

print_usage(){
cat << EOI
Usage:
 screenctl OPTION

Options:
  modes          List available modes
  help           Show help message
  dialog         Show graphical menu
  internal       Use internal display only
  external       Use extern display only
  clone          Show same content on internal and external display
  extend [POS]   Use internal and external screen as one desktop
                 POS = { left | right }
EOI
}

case $1 in
  "modes")
    xrandr -q
    ;;
  "internal")
    xrandr --output "$INTERNAL" --auto --output "$EXTERNAL" --off
    ;;
  "external")
    xrandr --output "$INTERNAL" --off --output "$EXTERNAL" --auto
    ;;
  "clone")
    CLONERES="`xrandr --query | awk '/^ *[0-9]*x[0-9]*/{ print $1 }' | sort -n | uniq -d | tail -1`"
    xrandr --output "$INTERNAL" --mode "$CLONERES" \
           --output "$EXTERNAL" --same-as "$INTERNAL" --mode "$CLONERES"
    ;;
  "extend")
    case $2 in
      "left")
        xrandr --output "$INTERNAL" --auto \
               --output "$EXTERNAL" --auto --left-of "$INTERNAL" --primary
      ;;
      "right")
        xrandr --output "$INTERNAL" --auto \
               --output "$EXTERNAL" --auto --right-of "$INTERNAL" --primary
      ;;
      "")
        xrandr --output "$INTERNAL" --auto --pos 0x400 \
               --output "$EXTERNAL" --auto --pos 1280x0 --primary
      ;;
      *)
        print_usage
        exit 1
      ;;
    esac
    ;;
  "dialog")
    MODE=$(zenity  --list  --text "Select screen mode:" \
      --radiolist  --column "Mode" --column "Description" \
      TRUE "Internal" \
      FALSE "External" \
      FALSE "Clone" \
      FALSE "Extend" \
      FALSE "Extend Left" \
      FALSE "Extend Right")
    if [ -n "$MODE" ]
    then
      $0 ${MODE,,}
    fi
    ;;
  "-h")
    print_usage
    ;;
  *)
    print_usage
    exit 1
    ;;
esac

if [ -f ~/.fehbg ]
then
  (sleep "$WAIT"
    eval `cat ~/.fehbg`
  ) &
fi

if pgrep conky &>/dev/null
then
  (sleep "$WAIT"
    pkill -HUP conky 2>&1 >/dev/null
  ) &
fi
